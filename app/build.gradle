apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'//GreenDao
def keystorePropertiesFile = rootProject.file("keystore.properties")//打包文件配置
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.ogh.support'
    def version = rootProject.ext.versions
    compileSdkVersion version.compileSdkVersion
    buildToolsVersion version.buildToolsVersion
    defaultConfig {
        applicationId version.applicationId
        minSdkVersion version.minSdkVersion
        targetSdkVersion version.targetSdkVersion
        versionCode version.versionCode
        versionName version.versionName
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        manifestPlaceholders = [CHANNEL: "MeiZu",]
//可用于三方sdk使用，例如极光推送的参数，可在AndroidManifest中使用，最后获取到这个参数
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false//是否允许调试(会影响BuildConfig.DEBUG的值)
            minifyEnabled true//是否开启代码混淆
            zipAlignEnabled true//是否优化apk文件，将apk文件中未压缩的数据在4个字节边界上对齐
            shrinkResources true//是否去除无用资源，任何在编译过程中没有用到的资源或者代码都会被删除，可以有效减小apk体积
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    sourceSets {
//        main {//自定义了so文件加载目录,默认so文件加载目录为:src/main/jniLibs
//            jniLibs.srcDirs = ['src/main/jniLibs']
//        }
//    }
//    repositories {//依赖aar必须填写这个
//        flatDir {
//            dirs 'libs'
//        }
//    }
    buildFeatures {
        viewBinding = true
    }
    dexOptions {//解决编译内存溢出问题
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "8g"
    }
    greendao {
        // 指定数据库schema版本号，迁移等操作会用到
        schemaVersion 1
        // 设置生成数据库文件的目录，默认是在build中，可以将生成的文件放到我们的java目录中
        targetGenDir 'src/main/java'
        // 设置生成的数据库相关文件的包名，默认为entity所在的包名
        daoPackage 'com.ogh.support.greendao'
    }
}

dependencies {
    def dependencies = rootProject.ext.deps
    implementation project(':frame')
    //分Dex
    implementation 'androidx.multidex:multidex:2.0.1'
    //屏幕适配
    implementation 'com.github.JessYanCoding:AndroidAutoSize:v1.2.1'
    //walle读取渠道号
    implementation dependencies.walle
    //下载上传工具类
    implementation 'me.laoyuyu.aria:core:3.8.16'
    annotationProcessor 'me.laoyuyu.aria:compiler:3.8.16'
    //glide图片加载
    implementation('com.github.bumptech.glide:glide:4.16.0') {
        exclude group: 'androidx.appcompat.app'
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'
    //支付宝
    implementation 'com.alipay.sdk:alipaysdk-android:+@aar'
    //微信支付
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android:+'
    //Greendao
    implementation 'org.greenrobot:greendao:3.3.0'
}